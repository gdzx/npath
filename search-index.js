var searchIndex = JSON.parse('{\
"npath":{"doc":"Normalized Paths","t":[8,8,10,10,10,10,10,10,10,10,10,10,10],"n":["NormPathBufExt","NormPathExt","absolute","base","dir","is_inside","lexical_join","lexical_push","normalized","relative_to","resolved","rooted_join","try_rooted_join"],"q":["npath","","","","","","","","","","","",""],"d":["Extension trait for <code>PathBuf</code>.","Extension trait for <code>Path</code>.","Returns the absolute equivalent of <code>self</code>.","Returns the last path component of <code>self</code>.","Returns <code>self</code> up to, but not including, the final component.","Returns whether <code>self</code> is lexically inside <code>base</code>.","Returns <code>path</code> lexically joined to <code>self</code>.","Lexically appends <code>path</code> to <code>self</code>.","Returns the normalized equivalent of <code>self</code>.","Returns the normalized relative path from <code>base</code> to <code>self</code>.","Returns the normalized equivalent of <code>self</code>, with â€¦","Returns <code>path</code> restricted to <code>self</code>.","Returns <code>path</code> restricted to <code>self</code>."],"i":[0,0,1,1,1,1,1,2,1,1,1,1,1],"f":[null,null,[[],["result",6,[["pathbuf",3]]]],[[],["path",3]],[[],["path",3]],[[["asref",8,[["path",3]]]],["bool",15]],[[["asref",8,[["path",3]]]],["pathbuf",3]],[[["asref",8,[["path",3]]]]],[[],["pathbuf",3]],[[["asref",8,[["path",3]]]],["option",4,[["pathbuf",3]]]],[[],["result",6,[["pathbuf",3]]]],[[["asref",8,[["path",3]]]],["pathbuf",3]],[[["asref",8,[["path",3]]]],["result",6,[["pathbuf",3]]]]],"p":[[8,"NormPathExt"],[8,"NormPathBufExt"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};